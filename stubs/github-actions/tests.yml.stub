name: tests
on: [push]
jobs:
  tests:
    runs-on: ubuntu-latest

    steps:

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer:v2, cs2pr
          coverage: none

      - uses: actions/checkout@v2

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Get composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Copy .env file
        run: cp .env.example .env

      - name: Start MySQL
        run: sudo systemctl start mysql.service

      - name: Create database
        run: echo "CREATE DATABASE homestead;" | mysql -uroot -proot

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Execute style fix
        run: |
          vendor/bin/php-cs-fixer fix || true
          vendor/bin/phpcbf || true

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "bot@github.actions"

      - name: Commit style-fix modifications
        run: |
          git add -u
          (git commit -m ":art: Auto style fix" && git push origin) || true

      - name: Tests migrations
        run: |
          php artisan migrate:fresh
          php artisan migrate:rollback
          php artisan migrate

      - name: Build assets
        run: |
          npm install
          npm run production

      - name: Run phpcs
        run: ./vendor/bin/phpcs --report=full

      - name: Run phpstan
        run: ./vendor/bin/phpstan analyse --memory-limit=2G

      - name: Run phpunit
        run: ./vendor/bin/phpunit --no-coverage
